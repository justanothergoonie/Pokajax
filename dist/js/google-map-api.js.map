{"version":3,"sources":["google-map-api.js"],"names":["GoogleApi","address","geocoder","google","maps","Geocoder","geocode","results","status","map","setCenter","geometry","location","event","CustomEvent","detail","lat","lng","document","querySelector","dispatchEvent","request","service","places","PlacesService","nearbySearch","PlacesServiceStatus","OK","evt","console","warn","searchPlaces","log","poke","pokeMark","pokeMarker","Marker","position","marker","title","name","setupMap","bodyEl","addEventListener","handleGetGeocode","handleGetPlaces","handlePlaceMarkers","circusLatLng","Map","getElementById","zoom","center","initMap"],"mappings":"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","sourcesContent":["class GoogleApi {\n\tmarkers = [];\n\tconstructor() {\n\t\tthis.setupMap();\n\t\tconst bodyEl = document.querySelector('body');\n\t\tbodyEl.addEventListener('get-geocode', this.handleGetGeocode);\n\t\tbodyEl.addEventListener('get-places', this.handleGetPlaces);\n\t\tbodyEl.addEventListener('place-markers', this.handlePlaceMarkers);\n\t}\n\tsetupMap() {\n\t\tvar circusLatLng = { lat: 33.749, lng: -84.388 };\n\t\tthis.map = new google.maps.Map(document.getElementById('map'), {\n\t\t\tzoom: 10,\n\t\t\tcenter: circusLatLng,\n\t\t});\n\t}\n\tgeocode = (address) => {\n\t\tvar geocoder = new google.maps.Geocoder();\n\t\tgeocoder.geocode({ address: address }, (results, status) => {\n\t\t\tif (status == 'OK') {\n\t\t\t\t// console.log(results);\n\t\t\t\tthis.map.setCenter(results[0].geometry.location);\n\t\t\t\tconst event = new CustomEvent('got-geocode', {\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tlat: results[0].geometry.location.lat(),\n\t\t\t\t\t\tlng: results[0].geometry.location.lng(),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tdocument.querySelector('body').dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t};\n\thandleGetGeocode = (event) => {\n\t\tthis.geocode(event.detail);\n\t};\n\n\tsearchPlaces = (request) => {\n\t\tvar service = new google.maps.places.PlacesService(this.map);\n\t\tservice.nearbySearch(request, (results, status) => {\n\t\t\tif (status == google.maps.places.PlacesServiceStatus.OK) {\n\t\t\t\tconst evt = new CustomEvent('got-places', { detail: results });\n\t\t\t\tdocument.querySelector('body').dispatchEvent(evt);\n\t\t\t} else {\n\t\t\t\tconsole.warn('google maps places status NOT OK', status);\n\t\t\t}\n\t\t});\n\t};\n\n\thandleGetPlaces = (event) => {\n\t\tthis.searchPlaces(event.detail);\n\t};\n\n\thandlePlaceMarkers = (event) => {\n\t\tconsole.log('hello', event.detail);\n\t\tfor (let poke in event.detail) {\n\t\t\tconst pokeMark = event.detail[poke];\n\t\t\tvar pokeMarker = new google.maps.Marker({\n\t\t\t\tposition: pokeMark.marker,\n\t\t\t\tmap: this.map,\n\t\t\t\ttitle: pokeMark.name,\n\t\t\t});\n\t\t}\n\t};\n}\nfunction initMap() {\n\tnew GoogleApi(document.getElementById('#map'));\n}\n"],"file":"google-map-api.js"}