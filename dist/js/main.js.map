{"version":3,"sources":["main.js"],"names":["console","log","Main","document","querySelector","Pokedex","event","currentLocation","detail","google","maps","LatLng","lat","lng","currentPokemonType","type","types","index","Math","floor","random","length","dispatchEvent","CustomEvent","location","radius","radiusEl","value","currentPlaces","pokePlaces","map","place","pokeMarkerLocation","geometry","marker","icon","currentPokemonImg","name","currentPokemonName","health","currentPokemonHealth","speed","currentPokemonSpeed","moves","attack","currentPokemonAttack","specAttack","currentPokemonSpecialAttack","defense","currentPokemonDefense","specDefense","currentPokemonSpecialDefense","infoWindowContent","currentPokemonMoves","pokeEvent","preventDefault","locationEl","locationTerm","pokemonEl","pokemonTerm","p","getPokemonByName","toLowerCase","then","response","species","sprites","front_default","abilities","abilityIndex","currentPokemonAbility","ability","stats","base_stat","body","addEventListener","searchPlacesByType","once","evt","api","WeatherApi","weatherSearch","results","setupEventListeners","buttonEl","handleSearch","bodyEl","handleGotGeocode","handleGotPlaces","handleWeather","handleSearchError"],"mappings":"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","sourcesContent":["console.log('hello');\nclass Main {\n\tcurrentPlaces = [];\n\tcurrentPokemonType = '';\n\tcurrentPokemonName = '';\n\tcurrentPokemonImg = '';\n\tcurrentPokemonMove1 = '';\n\tcurrentPokemonMove2 = '';\n\tcurrentPokemonAttack = '';\n\tcurrentPokemonSpecialAttack = '';\n\tcurrentPokemonDefense = '';\n\tcurrentPokemonSpecialDefense = '';\n\tcurrentPokemonSpeed = '';\n\tcurrentPokemonHealth = '';\n\tcurrentPokemonAbility = '';\n\tradiusEl = document.querySelector('[name=\"radius\"]');\n\n\tp = new Pokedex.Pokedex();\n\tconstructor() {\n\t\tthis.setupEventListeners();\n\t}\n\tsetupEventListeners() {\n\t\tconst buttonEl = document.querySelector('[name=\"add-pokemon\"]');\n\t\tbuttonEl.addEventListener('click', this.handleSearch);\n\t\tconst bodyEl = document.querySelector('body');\n\t\tbodyEl.addEventListener('got-geocode', this.handleGotGeocode);\n\t\tbodyEl.addEventListener('got-places', this.handleGotPlaces);\n\t\tbodyEl.addEventListener('got-weather', this.handleWeather);\n\t\tbodyEl.addEventListener('got-error', this.handleSearchError);\n\t}\n\n\thandleGotGeocode = (event) => {\n\t\tconsole.log('handleGotGeocode', this.currentLocation, event.detail);\n\t\tthis.currentLocation = new google.maps.LatLng(\n\t\t\tevent.detail.lat,\n\t\t\tevent.detail.lng\n\t\t);\n\t};\n\n\tsearchPlacesByType = () => {\n\t\tconsole.log('searchPlacesByType', this.currentPokemonType);\n\t\tlet type = 'normal';\n\t\tif (\n\t\t\tthis.currentPokemonType === 'grass' ||\n\t\t\tthis.currentPokemonType === 'bug'\n\t\t) {\n\t\t\tconst types = ['park', 'campground', 'florist'];\n\t\t\tconst index = Math.floor(Math.random() * types.length);\n\t\t\tconsole.log(index);\n\t\t\ttype = types[index];\n\t\t} else if (this.currentPokemonType === 'water') {\n\t\t\tconst types = ['fire_station', 'aquarium'];\n\t\t\tconst index = Math.floor(Math.random() * types.length);\n\t\t\tconsole.log(index);\n\t\t\ttype = types[index];\n\t\t} else if (this.currentPokemonType === 'ground') {\n\t\t\ttype = 'campground';\n\t\t} else if (this.currentPokemonType === 'electric') {\n\t\t\tconst types = ['electrician', 'electronics_store'];\n\t\t\tconst index = Math.floor(Math.random() * types.length);\n\t\t\tconsole.log(index);\n\t\t\ttype = types[index];\n\t\t} else if (this.currentPokemonType === 'fairy') {\n\t\t\ttype = 'beauty_salon';\n\t\t} else if (this.currentPokemonType === 'dragon') {\n\t\t\ttype = 'amusement_park';\n\t\t} else if (\n\t\t\tthis.currentPokemonType === 'dark' ||\n\t\t\tthis.currentPokemonType === 'ghost'\n\t\t) {\n\t\t\tconst types = ['funeral_home', 'cemetery'];\n\t\t\tconst index = Math.floor(Math.random() * types.length);\n\t\t\tconsole.log(index);\n\t\t\ttype = types[index];\n\t\t} else if (\n\t\t\tthis.currentPokemonType === 'steel' ||\n\t\t\tthis.currentPokemonType == 'flying'\n\t\t) {\n\t\t\ttype = 'airport';\n\t\t} else if (this.currentPokemonType === 'psychic') {\n\t\t\ttype = 'university';\n\t\t} else if (this.currentPokemonType === 'poison') {\n\t\t\ttype = 'bar';\n\t\t} else if (this.currentPokemonType === 'fighting') {\n\t\t\ttype = 'gym';\n\t\t}\n\t\tdocument.querySelector('body').dispatchEvent(\n\t\t\tnew CustomEvent('get-places', {\n\t\t\t\tdetail: {\n\t\t\t\t\tlocation: this.currentLocation,\n\t\t\t\t\tradius: this.radiusEl.value,\n\t\t\t\t\ttype: type,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t};\n\thandleGotPlaces = (event) => {\n\t\tthis.currentPlaces = event.detail;\n\t\tconsole.log('handleGotPlaces', this.currentPlaces);\n\t\tconst pokePlaces = this.currentPlaces.map((place) => {\n\t\t\tconst pokeMarkerLocation = {\n\t\t\t\tlat: place.geometry.location.lat(),\n\t\t\t\tlng: place.geometry.location.lng(),\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tmarker: pokeMarkerLocation,\n\t\t\t\ticon: this.currentPokemonImg,\n\t\t\t\tname: this.currentPokemonName,\n\t\t\t\ttype: this.currentPokemonType,\n\t\t\t\thealth: this.currentPokemonHealth,\n\t\t\t\tspeed: this.currentPokemonSpeed,\n\t\t\t\tmoves: this.moves,\n\t\t\t\tattack: this.currentPokemonAttack,\n\t\t\t\tspecAttack: this.currentPokemonSpecialAttack,\n\t\t\t\tdefense: this.currentPokemonDefense,\n\t\t\t\tspecDefense: this.currentPokemonSpecialDefense,\n\t\t\t\tinfoWindowContent: [\n\t\t\t\t\tthis.currentPokemonType,\n\t\t\t\t\tthis.currentPokemonHealth,\n\t\t\t\t\tthis.currentPokemonSpeed,\n\t\t\t\t\tthis.currentPokemonMoves,\n\t\t\t\t\tthis.currentPokemonAttack,\n\t\t\t\t\tthis.currentPokemonSpecialAttack,\n\t\t\t\t\tthis.currentPokemonDefense,\n\t\t\t\t\tthis.currentPokemonSpecialDefense,\n\t\t\t\t],\n\t\t\t};\n\t\t});\n\t\tconst pokeEvent = new CustomEvent('place-markers', {\n\t\t\tdetail: pokePlaces,\n\t\t});\n\t\tdocument.querySelector('body').dispatchEvent(pokeEvent);\n\t};\n\n\thandleSearch = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst locationEl = document.querySelector('[name=\"location\"]');\n\t\tconst locationTerm = locationEl.value;\n\n\t\tconst pokemonEl = document.querySelector('[name=\"pokemon\"]');\n\t\tconst pokemonTerm = pokemonEl.value;\n\n\t\tconsole.log('searching..', locationTerm, pokemonTerm);\n\n\t\tthis.p.getPokemonByName(pokemonTerm.toLowerCase()).then((response) => {\n\t\t\tthis.currentPokemonType = response.types[0].type.name;\n\t\t\tthis.currentPokemonName = response.species.name;\n\t\t\tthis.currentPokemonImg = response.sprites.front_default;\n\t\t\tvar abilities = response.abilities;\n\t\t\tconst abilityIndex = Math.floor(Math.random() * abilities.length);\n\t\t\tthis.currentPokemonAbility = abilities[abilityIndex].ability.name;\n\t\t\tthis.currentPokemonHealth = response.stats[0].base_stat;\n\t\t\tthis.currentPokemonAttack = response.stats[1].base_stat;\n\t\t\tthis.currentPokemonDefense = response.stats[2].base_stat;\n\t\t\tthis.currentPokemonSpecialAttack = response.stats[3].base_stat;\n\t\t\tthis.currentPokemonSpecialDefense = response.stats[4].base_stat;\n\t\t\tthis.currentPokemonSpeed = response.stats[5].base_stat;\n\t\t\tthis.moves = response.moves;\n\t\t\t// const movesIndex1 = Math.floor(Math.random() * moves.length);\n\t\t\t// const movesIndex2 = Math.floor(Math.random() * moves.length);\n\t\t\t// this.currentPokemonMove1 = moves[movesIndex1].move.name;\n\t\t\t// this.currentPokemonMove2 = moves[movesIndex2].move.name;\n\t\t\tconsole.log(\n\t\t\t\tresponse,\n\t\t\t\tthis.currentPokemonName,\n\t\t\t\tthis.currentPokemonType,\n\t\t\t\tthis.currentPokemonAbility,\n\t\t\t\tthis.currentPokemonHealth,\n\t\t\t\tthis.currentPokemonAttack,\n\t\t\t\tthis.currentPokemonDefense,\n\t\t\t\tthis.currentPokemonSpecialAttack,\n\t\t\t\tthis.currentPokemonSpecialDefense,\n\t\t\t\tthis.currentPokemonSpeed,\n\t\t\t\tthis.currentPokemonMoves\n\t\t\t);\n\t\t\tdocument.body.addEventListener(\n\t\t\t\t'got-geocode',\n\t\t\t\t() => {\n\t\t\t\t\tconsole.log('google got the city');\n\t\t\t\t\tthis.searchPlacesByType();\n\t\t\t\t},\n\t\t\t\t{ once: true }\n\t\t\t);\n\t\t\tconst evt = new CustomEvent('get-geocode', {\n\t\t\t\tdetail: locationTerm,\n\t\t\t});\n\t\t\tdocument.querySelector('body').dispatchEvent(evt); // google replies with a got-geocode event on body\n\t\t});\n\n\t\tconst api = new WeatherApi();\n\t\tapi.weatherSearch(locationTerm);\n\t};\n\thandleSearchError = () => {};\n\thandleWeather = (event) => {\n\t\tconst results = event.detail;\n\t\tconsole.log('showing results from map', results);\n\t};\n}\nnew Main();\n"],"file":"main.js"}